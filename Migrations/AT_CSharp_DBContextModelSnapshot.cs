// <auto-generated />
using System;
using AT_CSharp_DB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AT_CSharp_DB.Migrations
{
    [DbContext(typeof(AT_CSharp_DBContext))]
    partial class AT_CSharp_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AT_CSharp_DB.Models.CidadeDestino", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaisDestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("PacoteTuristicoId");

                    b.HasIndex("PaisDestinoId");

                    b.ToTable("CidadesDestino");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.PaisDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaisesDestino");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.CidadeDestino", b =>
                {
                    b.HasOne("AT_CSharp_DB.Models.PacoteTuristico", null)
                        .WithMany("Cidades")
                        .HasForeignKey("PacoteTuristicoId");

                    b.HasOne("AT_CSharp_DB.Models.PaisDestino", "Pais")
                        .WithMany("Cidades")
                        .HasForeignKey("PaisDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.Cliente", b =>
                {
                    b.OwnsOne("AT_CSharp_DB.Models.EnderecoCliente", "EnderecoCliente", b1 =>
                        {
                            b1.Property<int>("ClienteID")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("cidade")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("logradouro")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("pais")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ClienteID");

                            b1.ToTable("Clientes");

                            b1.WithOwner()
                                .HasForeignKey("ClienteID");
                        });

                    b.Navigation("EnderecoCliente")
                        .IsRequired();
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.Reserva", b =>
                {
                    b.HasOne("AT_CSharp_DB.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AT_CSharp_DB.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany()
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.PacoteTuristico", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("AT_CSharp_DB.Models.PaisDestino", b =>
                {
                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
